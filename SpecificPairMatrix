public class SpecificPairMatrix {
    public static int findMaxValue(int[][] matrix) {
        int n = matrix.length;
        int maxValue = Integer.MIN_VALUE;
        int[][] maxArr = new int[n][n];

        maxArr[n - 1][n - 1] = matrix[n - 1][n - 1];

        // Preprocess last row
        for (int i = n - 2; i >= 0; i--) {
            maxArr[n - 1][i] = Math.max(matrix[n - 1][i], maxArr[n - 1][i + 1]);
        }

        // Preprocess last column
        for (int i = n - 2; i >= 0; i--) {
            maxArr[i][n - 1] = Math.max(matrix[i][n - 1], maxArr[i + 1][n - 1]);
        }

        // Process rest of the matrix
        for (int i = n - 2; i >= 0; i--) {
            for (int j = n - 2; j >= 0; j--) {
                // Update maxValue
                maxValue = Math.max(maxValue, maxArr[i + 1][j + 1] - matrix[i][j]);

                // Update maxArr
                maxArr[i][j] = Math.max(matrix[i][j], Math.max(maxArr[i + 1][j], maxArr[i][j + 1]));
            }
        }

        return maxValue;
    }

    public static void main(String[] args) {
        int[][] matrix = {
            {1, 2, -1, -4, -20},
            {-8, -3, 4, 2, 1},
            {3, 8, 6, 1, 3},
            {-4, -1, 1, 7, -6},
            {0, -4, 10, -5, 1}
        };
        System.out.println("Maximum value is " + findMaxValue(matrix));
    }
}
