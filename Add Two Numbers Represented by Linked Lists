class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        this.next = null;
    }
}

class LinkedList {
    Node head;

    Node addTwoNumbers(Node l1, Node l2) {
        Node dummy = new Node(0);
        Node p = l1, q = l2, current = dummy;
        int carry = 0;

        while (p != null || q != null) {
            int x = (p != null) ? p.data : 0;
            int y = (q != null) ? q.data : 0;

            int sum = carry + x + y;
            carry = sum / 10;
            current.next = new Node(sum % 10);
            current = current.next;

            if (p != null) p = p.next;
            if (q != null) q = q.next;
        }

        if (carry > 0) {
            current.next = new Node(carry);
        }

        return dummy.next; // Skip the dummy node
    }

    void printList() {
        Node current = head;
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
        System.out.println();
    }
}

// Example usage
public class AddTwoNumbers {
    public static void main(String[] args) {
        LinkedList l1 = new LinkedList();
        l1.head = new Node(2);
        l1.head.next = new Node(4);
        l1.head.next.next = new Node(3);

        LinkedList l2 = new LinkedList();
        l2.head = new Node(5);
        l2.head.next = new Node(6);
        l2.head.next.next = new Node(4);

        LinkedList result = new LinkedList();
        result.head = result.addTwoNumbers(l1.head, l2.head);

        System.out.println("Sum Linked List:");
        result.printList();
    }
}
