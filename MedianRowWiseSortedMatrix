import java.util.Arrays;

public class MedianRowWiseSortedMatrix {
    public static int median(int[][] matrix, int r, int c) {
        int min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;
        for (int i = 0; i < r; i++) {
            if (matrix[i][0] < min) min = matrix[i][0];
            if (matrix[i][c - 1] > max) max = matrix[i][c - 1];
        }

        int desired = (r * c + 1) / 2;
        while (min < max) {
            int mid = min + (max - min) / 2;
            int place = 0;
            for (int i = 0; i < r; i++) {
                place += Arrays.binarySearch(matrix[i], mid) >= 0
                        ? Math.abs(Arrays.binarySearch(matrix[i], mid)) : 0;
            }
            if (place < desired) min = mid + 1;
            else max = mid;
        }
        return min;
    }

    public static void main(String[] args) {
        int[][] matrix = {
                {1, 3, 5},
                {2, 6, 9},
                {3, 6, 9}
        };
        System.out.println("Median is " + median(matrix, 3, 3));
    }
}
